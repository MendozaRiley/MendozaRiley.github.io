float a = 0.0;
float inc = TWO_PI/30.0;
int value = 0;
int offset = 300;
int counter = 0;
int counter2 = 100;
int counter3 = 0;
int aircraft = 0;
int speed = 5;
int speed2 = -5;
int speed3 = 2;
char currentkey = '1';


void setup() {
  size(900,900);
  colorMode(HSB, 100);
  background(75, 100, 30);
  
}

void draw()  {
  
  if (mousePressed && (mouseButton == LEFT)) {
    drawChoice();
  }
  
  //if (frameCount < 200) {
    // Saves each frame as line-000001.png, line-000002.png, etc.
    //saveFrame("images/line-######.png");
  //} else {
    //exit();
  //}
}

void drawChoice() {
  char currentkey = key;

  switch(currentkey) {
    case 'q':
      println("quills");
      rmQuills();
      break;
    case 's':
      println("stars");
      rmStars();
      break;
    case 'a':
      println("take me to your leader");
      rmAlien1();
      break;
    case '1':
      println("I come in piece");
      rmUFO1();
      break;
    case '2':
      println("Bleep bloop oop");
      rmUFO2();
      break;
    case '3':
      println("We will destroy you all");
      rmUFO3();
      break;
    default:
      println("U thought");
        fill(100);
        noStroke();
        circle(width/2, height/2, 100);
      break;
    
  } 
}

void rmQuills() {
  for (int i=mouseX; i<1000; i+=50) {
    stroke(0);
    strokeWeight(1);
    line(i, i + mouseY, i + mouseX, mouseY + sin(a)*50.0);
    println(" The angle = " + a + " The sin = " + sin(a));
    a = a + inc;
  }    
}

void rmStars() {
  float r = random(5);
  float rS = random(100);
  for (int i = 0; i < r; i+=1) {
    noStroke();
    fill(100, rS);
    circle(random(width), random(height), r);
  }
}

void rmAlien1 () {
  stroke(100);
  strokeWeight(random(5));
  color k = color(81, 10, 100, 50);
  rmTopBot(mouseX, mouseY, k);
  color k2 = color(50, 10, 100, 50);
  rmLeftRight(mouseX, mouseY, k2);  

}

void rmTopBot(int xpos, int ypos, color c) {
  fill(c);
  ellipse(xpos, ypos + counter, counter3 + 5, counter3);
  ellipse(xpos, ypos + counter2, counter3 + 5, counter3);
  
  counter = counter + speed;  
  if (counter > 100) {
    speed = -speed;  
  }  
  if (counter < -100) {
    speed = -speed;
  }
  
  counter2 = counter2 + speed2;  
  if (counter2 > 100) {
    speed2 = -speed2;
  }  
  if (counter2 < -100) {
    speed2 = -speed2; 
  }
  
  counter3 = counter3 + speed3;
  if (counter3 > 60) {
    speed3 = -speed3;
  }
  if (counter3 < 0) {
    speed3 = -speed3; 
  }
}

void rmLeftRight(int xpos, int ypos, color c) {
  fill(c);
  ellipse(xpos + counter, ypos, counter3, counter3 + 5);
  ellipse(xpos + counter2, ypos, counter3, counter3 + 5);
  
    
  counter = counter + speed;
  if (counter > 100) {
    speed = -speed;  
  } 
  if (counter < -100) {
    speed = -speed;
  }
  
  counter2 = counter2 + speed2;
  if (counter2 > 100) {
    speed2 = -speed2;
  }
  if (counter2 < -100) {
    speed2 = -speed2; 
  }
  
  counter3 = counter3 + speed3;
  if (counter3 > 60) {
    speed3 = -speed3;
  }
  if (counter3 < 0) {
    speed3 = -speed3; 
  }
}

void rmUFO1() {
  color k = color(0, 0, 95);
  stroke(81, 30, 100);
  strokeWeight(3);
  rmUTop(mouseX, mouseY, 1, k);
  stroke(81, 30, 100);
  rmUBot(mouseX, mouseY + 15, 0, 0, k);
}

void rmUFO2() {
  color k = color(0, 0, 80);
  stroke(50, 30, 100);
  strokeWeight(3);
  rmUTop(mouseX, mouseY, 0, k);
  stroke(50, 30, 100);
  rmUBot(mouseX, mouseY + 15, 1, 0, k);
}

void rmUFO3() {
  color k = color(0, 0, 40);
  stroke(81, 30, 100);
  strokeWeight(3);
  rmUTop(mouseX, mouseY, 1, k);
  stroke(81, 30, 100);
  rmUBot(mouseX, mouseY + 15, 0, 1, k);
}

void rmUTop(int xpos, int ypos, int window, color c) { 
  fill(c);
  arc(xpos,ypos,60,70,PI,TWO_PI,CHORD);
  
  if (window == 1) {
    fill(50, 30, 100);
    stroke(50, 0, 100);
    circle(xpos, ypos - 15, 20); 
  }
  
  if (window == 0) {
    fill(81, 30, 100);
    stroke(50, 0, 100);
    circle(xpos, ypos - 15, 20); 
  }
}

void rmUBot(int xpos, int ypos, int light, int ray, color c){
  fill(c);
  arc(xpos,ypos,100,40,PI,TWO_PI,CHORD);
  
  if (light == 1) {
    stroke(0,0,100,20);
    strokeWeight(8);
    fill(100);
    triangle(xpos, ypos, xpos - 20, ypos + 300, xpos + 20, ypos + 300);
  }
  
  if (ray == 1) {
    push();
    stroke(50, 30, 100);
    strokeWeight(2);
    translate(mouseX + 220, mouseY - 20);
    rotate(radians(90));
    scale(.75);
    rmRays();
    pop();
  }

}

void rmRays() {
  for (int i=50; i<750; i+=10) {
    line(i, 300, i, offset + sin(a)*60.0);
    println(" The angle = " + a + " The sin = " + sin(a));
    a = a + inc;
  }
}

void keyPressed() {
  if ( key == 'b' || key == 'B' ) {  
    if (value == 0) {
      value = 30;
    } else {
      value = 0;
    }
   fill(80, 25, 80, value);
   noStroke();
   rect(0, 0, width, height); 
  }

  if ( key == 'p' || key == 'P' ) {  
    if (value == 0) {
      value = 30;
    } else {
      value = 0;
    }
   fill(75, 100, 30, value);
   noStroke();
   rect(0, 0, width, height); 
  }

}