PFont f; 
int counter1 = 100;
int counter2 = 0;
int counter3 = 30;
int counter4 = -45;
int speed1 = 2;
int speed2 = 2;
int offset = 300;
float r = random(50);
float rloop = random(20);
float a = 0.0;
float inc = TWO_PI/30.0;

void setup() {
  size(900, 900);
  background(0);
  noStroke();
  rectMode(CENTER);


  // printArray(PFont.list());
  f = createFont("Yu Gothic Bold", 32);
  //set the font for drawing
  textFont(f);
}

void draw() {
  background(0, 100, 150);
  
  push();
  translate(0, -300);
  rotate(radians(0));
    rmWater();
  pop();
  
  push();
  translate(900, 1200);
  rotate(radians(180));
    rmWater();
  pop();
  
  push();
  translate(1200, -50);
  rotate(radians(90));
    rmWater();
  pop();
  
  push();
  translate(-300, 850);
  rotate(radians(270));
    rmWater();
  pop();
 
  fill(255);

  pushMatrix();
    translate(400, 400);
    rotate(radians(counter3));
    scale(1);
    stroke(255);
    strokeWeight(3);
    rmFish2();
    // pushing it over to the right and up 
  popMatrix();

  fill(255,0,0);
  pushMatrix();
    translate(400, 400);
    rotate(radians(counter4));
    scale(.75);
    rmFish1();
    // pushing it over to the right and up
  popMatrix();
  
  counter3++;
  counter4--;
  
  push();
  translate(400, -counter2 + 350);
  rotate(radians(10));
  scale(1.25);
  rmFish2();
  pop();
  
  push();
  translate(800, counter2 + 700);
  rotate(radians(-170));
  scale(1.25);
  rmFish1();
  pop();

  counter1 = counter1 + speed1;
  if (counter1 > height) {
    speed1 = -speed1;
  }
  if (counter1 < 0) {
    speed1 = -speed1;
  }
  
  counter2 = counter2 - speed2;
    if (counter2 > height) {
    speed2 = -speed2;
  }
  if (counter2 < 0) {
    speed2 = -speed2;
  }
  

  push();
  translate(mouseX, mouseY);
  rotate(radians(mouseX));
  scale(.75);
  rmFlower();
  pop();
  
  if ( mousePressed  == true )  {
    rmSign1("Lily Pad");   
  }
  
  if (frameCount < 50) {
    //Saves each frame as line-000001.png, line-000002.png, etc.
    saveFrame("images/line-######.png");
  } else {
    exit();
  }
  
}

void rmWater() {
  stroke(0, 50, 100);
  strokeWeight(5);
  float r = random(200.0);
  //for (int i = 0; i < r; i+=1) {
    noFill();
    for (int j=100; j<900; j+=10) {
      line(j, 300, j, offset + sin(a)*r);
      a = a + inc;
    }
  //}
  
}

void rmFish1() {
  color k = color(170,0,200);
  body(420,250,0,k);
  head(450,250,1,k);
  fin(390,250,k);
  fin(510,250,k);
  tail(450,350,k);
}

void rmFish2() {
  color k = color(180,100,255);
  body(180,250,1,k);
  head(210,250,0,k);
  fin(150,250,k);
  fin(270,250,k);
  tail(210,350,k);
}

void body(int xpos, int ypos, int scale, color c ) {
  fill(c);
  triangle(xpos,ypos,xpos+60,ypos, xpos+30,ypos+80);
    noFill();
  stroke(255);
  
  if (scale == 1) {
    arc(xpos + 30,ypos + 40, 10, 10, 0, PI, OPEN);
    arc(xpos + 40,ypos + 20, 10, 10, 0, PI, OPEN);
    arc(xpos + 20,ypos + 20, 10, 10, 0, PI, OPEN);
  }
}

void head(int xpos, int ypos, int bubble, color c) {
  fill(c);
  arc(xpos,ypos,60,100,PI,TWO_PI,OPEN);
  
  if (bubble == 1) {
    float r = random(10);
    float rloop = random(30);
    for (int i = 0; i < r; i+=1) {
      fill(rloop+10, random(150), r+150);
      ellipse(xpos + random(50) - random(20), ypos - random(150), r, r);
    }
  }
}

void tail(int xpos,int ypos,color c) {
  fill(c);
  arc(xpos,ypos,80,50,PI - QUARTER_PI, TWO_PI + QUARTER_PI, PIE); 
}


void fin(int xpos,int ypos, color c) {
  fill(c);
  arc(xpos, ypos, 60, 10, 0, TWO_PI);
}    
    
void rmSign1(String ss) {
  stroke(240, 50, 230);
  fill(255,240);
  rect(mouseX,mouseY,200,50);
  color k = color(0, 180, 0);
  sdDrawText(ss, mouseX - 70,mouseY + 10,k);
}  
     
void sdDrawText(String s, int lx, int ly, color c ) {
  fill(c);
  text(s, lx, ly,20);
}
    
    
void rmFlower() { 
  // draw a face!
  //note that is based on an origin in the top left corner
  stroke(0, 200, 150);
  strokeWeight(8);
  fill(100, 245, 200);
  ellipse(0, 100, 300, 300);
  
  stroke(200, 100, 250);
  strokeWeight(8);
  fill(240, 200, 255);
  ellipse(0, 100, 50, 50);
  arc(0, 20, 50, 100, 0, TWO_PI);
  arc(75, 100, 100, 50, 0, TWO_PI);
  arc(-75, 100, 100, 50, 0, TWO_PI);
  arc(0, 180, 50, 100, 0, TWO_PI);
}